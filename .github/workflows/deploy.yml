name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run type check
        run: pnpm run type-check
        
      - name: Run linting
        run: pnpm run lint
        
      - name: Build application
        run: pnpm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Build Docker image
        run: docker build -t ${{ github.repository }}:${{ github.sha }} .
        
      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 8080:80 ${{ github.repository }}:${{ github.sha }}
          sleep 10
          curl -f http://localhost:8080/health || exit 1
          docker stop test-container
          docker rm test-container
          
      # Add your deployment steps here
      # Example for Docker Registry:
      # - name: Login to Docker Registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     
      # - name: Push to Docker Registry
      #   run: docker push ${{ github.repository }}:${{ github.sha }} 